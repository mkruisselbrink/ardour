#!/usr/bin/env python
from waflib.extras import autowaf as autowaf
from waflib import Options
import os

# Mandatory variables
top = '.'
out = 'build'

# Version of this package (even if built as a child)
MAJOR = '0'
MINOR = '0'
MICRO = '0'
SMUFL_VERSION = "%s.%s.%s" % (MAJOR, MINOR, MICRO)

# Library version (UNIX style major, minor, micro)
# major increment <=> incompatible changes
# minor increment <=> compatible changes (additions)
# micro increment <=> no interface changes
SMUFL_LIB_VERSION = '0.0.0'

# Variables for 'waf dist'
APPNAME = 'smufl'
VERSION = SMUFL_VERSION
I18N_PACKAGE = 'libsmufl'

smufl_sources = [
    'font_data.cc',
    'glyph.cc',
]

def options(opt):
    autowaf.set_options(opt)

def configure(conf):
    pass

def build(bld):
    # Library
    if bld.is_defined ('INTERNAL_SHARED_LIBS'):
        obj = bld.shlib(features = 'cxx cxxshlib', source=smufl_sources)
        obj.defines = [ 'LIBSMUFL_DLL_EXPORTS=1' ]
    else:
        obj = bld.stlib(features = 'cxx cxxstlib', source=smufl_sources)
        obj.cxxflags = [ bld.env['compiler_flags_dict']['pic'] ]
        obj.cflags   = [ bld.env['compiler_flags_dict']['pic'] ]
        obj.defines  = []
    
    obj.export_includes = ['.']
    obj.includes     = ['.']
    obj.name         = 'libsmufl'
    obj.target       = 'smufl'
    obj.vnum         = SMUFL_LIB_VERSION
    obj.install_path = bld.env['LIBDIR']
    obj.defines     += [ 'PACKAGE="' + I18N_PACKAGE + '"' ]
    obj.uselib       = [ 'BOOST', 'GLIBMM' ]
    obj.use          = [ 'libpbd' ]

def test(ctx):
    pass

def shutdown():
    autowaf.shutdown()
